{% comment %}
  Game Collection Grid Section
  - Displays products from selected game collection
  - Supports sorting and filtering while maintaining game tags
{% endcomment %}

{% if request.xhr? %}
  {% layout none %}
  <div class="products-grid">
    <div class="products-grid__items" style="display: grid; grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr); gap: 2rem;">
      {% for product in collection.products %}
        <div class="product-card">
          <a href="{{ product.url }}" class="product-card__link">
            {% if product.featured_media %}
              <div class="product-card__image">
                <img src="{{ product.featured_media | img_url: '500x' }}"
                     alt="{{ product.featured_media.alt | escape }}"
                     loading="lazy"
                     width="500"
                     height="500">
                {% unless product.available %}
                  <div class="product-card__sold-out">
                    <span>Sold out</span>
                  </div>
                {% endunless %}
              </div>
            {% endif %}

            <div class="product-card__info">
              <h2 class="product-card__title">{{ product.title }}</h2>
              <div class="product-card__price">
                {% if product.price_varies %}
                  <span>from {{ product.price_min | money }}</span>
                {% else %}
                  <span>{{ product.price | money }}</span>
                {% endif %}
              </div>
            </div>
          </a>
        </div>
      {% else %}
        <div class="empty-collection">
          <p>No products found</p>
        </div>
      {% endfor %}
    </div>
  </div>
{% else %}
<section class="game-collection-grid-section">
  <div id="game-collection-grid" class="page-width">
    <div class="collection-controls">
      <div class="collection-controls__filters">
        <span class="collection-controls__label">Filter:</span>
        
        <div class="collection-filter">
          <button type="button" 
                  class="collection-filter__button"
                  aria-expanded="false"
                  aria-controls="availability-filter">
            Availability
            {% render 'icon-caret' %}
          </button>
          <div id="availability-filter" class="collection-filter__dropdown" hidden>
            <div class="collection-filter__header">
              <span>{{ collection.filters.first.active_values.size }} selected</span>
              <button type="button" class="collection-filter__reset">Reset</button>
            </div>
            <div class="collection-filter__options">
              <label class="collection-filter__option">
                <input type="checkbox" 
                       name="filter.v.availability" 
                       value="1"
                       {% if collection.current_vendor != blank %}checked{% endif %}>
                <span>In stock ({{ collection.products | where: 'available' | size }})</span>
              </label>
              <label class="collection-filter__option">
                <input type="checkbox" 
                       name="filter.v.availability" 
                       value="0">
                <span>Out of stock ({{ collection.products | where: 'available', false | size }})</span>
              </label>
            </div>
          </div>
        </div>

        <div class="collection-filter">
          <button type="button" 
                  class="collection-filter__button"
                  aria-expanded="false"
                  aria-controls="price-filter">
            Price
            {% render 'icon-caret' %}
          </button>
          <div id="price-filter" class="collection-filter__dropdown" hidden>
            <div class="collection-filter__header">
              <span>The highest price is {{ collection.products | map: 'price' | sort | last | money }}</span>
              <button type="button" class="collection-filter__reset">Reset</button>
            </div>
            <div class="collection-filter__price-range">
              <div class="collection-filter__price-field">
                <span>$</span>
                <input type="number" 
                       name="filter.v.price.gte" 
                       placeholder="From">
              </div>
              <div class="collection-filter__price-field">
                <span>$</span>
                <input type="number" 
                       name="filter.v.price.lte" 
                       placeholder="To">
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="collection-controls__sort">
        <span class="collection-controls__label">Sort by:</span>
        <div class="collection-sort">
          <button type="button" 
                  class="collection-sort__button"
                  aria-expanded="false"
                  aria-controls="sort-options">
            {{ collection.sort_by | default: 'Featured' | replace: '-', ' ' | capitalize }}
            {% render 'icon-caret' %}
          </button>
          <div id="sort-options" class="collection-sort__dropdown" hidden>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == nil or collection.sort_by == 'manual' %}selected{% endif %}"
                    data-value="manual">Featured</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'best-selling' %}selected{% endif %}"
                    data-value="best-selling">Best selling</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'title-ascending' %}selected{% endif %}"
                    data-value="title-ascending">Alphabetically, A-Z</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'title-descending' %}selected{% endif %}"
                    data-value="title-descending">Alphabetically, Z-A</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'price-ascending' %}selected{% endif %}"
                    data-value="price-ascending">Price, low to high</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'price-descending' %}selected{% endif %}"
                    data-value="price-descending">Price, high to low</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'created-ascending' %}selected{% endif %}"
                    data-value="created-ascending">Date, old to new</button>
            <button type="button" 
                    class="collection-sort__option {% if collection.sort_by == 'created-descending' %}selected{% endif %}"
                    data-value="created-descending">Date, new to old</button>
          </div>
        </div>
        <span class="collection-controls__count">{{ collection.products_count }} products</span>
      </div>
    </div>

    <div class="products-grid">
      <div class="products-grid__items" style="display: grid; grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr); gap: 2rem;">
        {% for product in collection.products %}
          <div class="product-card">
            <a href="{{ product.url }}" class="product-card__link">
              {% if product.featured_media %}
                <div class="product-card__image">
                  <img src="{{ product.featured_media | img_url: '500x' }}"
                       alt="{{ product.featured_media.alt | escape }}"
                       loading="lazy"
                       width="500"
                       height="500">
                  {% unless product.available %}
                    <div class="product-card__sold-out">
                      <span>Sold out</span>
                    </div>
                  {% endunless %}
                </div>
              {% endif %}

              <div class="product-card__info">
                <h2 class="product-card__title">{{ product.title }}</h2>
                <div class="product-card__price">
                  {% if product.price_varies %}
                    <span>from {{ product.price_min | money }}</span>
                  {% else %}
                    <span>{{ product.price | money }}</span>
                  {% endif %}
                </div>
              </div>
            </a>
          </div>
        {% else %}
          <div class="empty-collection">
            <p>No products found</p>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</section>
{% endif %}

<script>
  class CollectionControls {
    constructor() {
      this.init();
    }

    init() {
      this.initDropdowns();
      this.initSorting();
    }

    initDropdowns() {
      document.querySelectorAll('.collection-filter__button, .collection-sort__button').forEach(button => {
        button.addEventListener('click', () => {
          const dropdownId = button.getAttribute('aria-controls');
          const dropdown = document.getElementById(dropdownId);
          const isExpanded = button.getAttribute('aria-expanded') === 'true';
          
          // Close all other dropdowns
          document.querySelectorAll('.collection-filter__dropdown, .collection-sort__dropdown').forEach(d => {
            if (d.id !== dropdownId) {
              d.hidden = true;
              d.previousElementSibling.setAttribute('aria-expanded', 'false');
            }
          });

          button.setAttribute('aria-expanded', !isExpanded);
          dropdown.hidden = isExpanded;
        });
      });

      // Close dropdowns when clicking outside
      document.addEventListener('click', (event) => {
        if (!event.target.closest('.collection-filter, .collection-sort')) {
          document.querySelectorAll('.collection-filter__dropdown, .collection-sort__dropdown').forEach(dropdown => {
            dropdown.hidden = true;
            dropdown.previousElementSibling.setAttribute('aria-expanded', 'false');
          });
        }
      });
    }

    initSorting() {
      document.querySelectorAll('.collection-sort__option').forEach(option => {
        option.addEventListener('click', () => {
          const value = option.dataset.value;
          const url = new URL(window.location.href);
          url.searchParams.set('sort_by', value);
          window.location.href = url.toString();
        });
      });
    }
  }

  // Initialize collection controls
  document.addEventListener('DOMContentLoaded', () => {
    new CollectionControls();
  });
</script>

{% schema %}
{
  "name": "Game Collection Grid",
  "tag": "section",
  "class": "game-collection-grid-section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 4,
      "max": 48,
      "step": 4,
      "default": 16,
      "label": "Products per page"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "label": "Columns on desktop",
      "options": [
        {
          "value": "2",
          "label": "2 columns"
        },
        {
          "value": "3",
          "label": "3 columns"
        },
        {
          "value": "4",
          "label": "4 columns"
        }
      ],
      "default": "4"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        }
      ],
      "default": "2"
    }
  ],
  "presets": [
    {
      "name": "Game Collection Grid",
      "settings": {}
    }
  ]
}
{% endschema %}